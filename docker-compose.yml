services:

    web:
        image: nginx:latest
        working_dir: /app
        volumes:
            - ./:/app
            - ./.docker/web/rootfs/etc/nginx/conf.d/nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - ${APP_PORT:-80}:80
        links:
            - app

    app:
        build:
            context: .docker/app
        user: root
        expose:
            - 9000
            - 9003
            - 9222
        depends_on:
            - mysql
        volumes:
            - ./:/app:delegated
            - ./.docker/app/rootfs/etc/php/8.0/fpm/php-fpm.conf:/etc/php/8.0/fpm/php-fpm.conf:delegated
            - ./.docker/app/rootfs/etc/php/8.0/cli/php.ini:/etc/php/8.0/cli/php.ini:delegated
            - ./.docker/app/rootfs/etc/php/8.0/cli/conf.d/xdebug.ini:/etc/php/8.0/cli/conf.d/20-xdebug.ini
            - ./.docker/app/composer/auth.json:/var/www/.cache/composer/auth.json
            - composer:/var/www/.cache
        environment:
            APP_DEBUG: 1
            APP_ENV: dev
            DATABASE_URL: mysql://root:mysql@mysql/sylius_%kernel.environment%?serverVersion=8.0&charset=utf8mb4
            PHP_DATE_TIMEZONE: Europe/Warsaw
            PHP_IDE_CONFIG: serverName=sylius
            MAILER_DSN: smtp://mailhog:1025
            NPM_CONFIG_PATH: /var/www/.npm

    mysql:
        image: mysql:8.0
        platform: linux/amd64
        environment:
            MYSQL_ROOT_PASSWORD: mysql
        ports:
            - ${MYSQL_PORT:-3306}:3306

    mailhog:
        image: mailhog/mailhog
        ports:
            - "${MAILHOG_PORT:-8025}:8025" # UI
            - "1025:1025"

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
    composer: ~

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
